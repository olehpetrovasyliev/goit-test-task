{"version":3,"file":"static/js/168.e3756fe9.chunk.js","mappings":"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","sources":["services/redux/selectors.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/Card/Card.styled.js","components/Card/Card.jsx","components/CadsList/CardList.styled.js","components/CadsList/CardsList.jsx","components/Filter/Filter.jsx","pages/Tweets/Tweets.syled.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["export const selectUsers = state => state.users;\nexport const selectLoading = state => state.loading;\nexport const selectPage = state => state.page;\nexport const selectError = state => state.error;\n","import { styled } from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 196px;\n  height: 50px;\n  justify-content: center;\n  align-items: center;\n  background: ${props => props.background};\n  color: #373737;\n  border-radius: 10px;\n  text-transform: uppercase;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { StyledButton } from './Button.styled';\n\nconst Button = ({ func, text, background }) => {\n  return (\n    <StyledButton type=\"button\" onClick={func} background={background}>\n      {text}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import { styled } from 'styled-components';\n\nexport const StyledCard = styled.li`\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\nexport const CardText = styled.h3`\n  font-weight: 500;\n  font-family: 'Montserrat', sans-serif;\n  color: #ebd8ff;\n  font-size: 20px;\n  margin-top: 0;\n  margin-bottom: 16px;\n  &:nth-child(2) {\n    margin-bottom: 26px;\n    color: #000;\n  }\n`;\nexport const Avatar = styled.img`\n  width: 62px;\n  height: 62px;\n  border-radius: 100px;\n  border-width: 2px;\n  border-color: #ebd8ff;\n`;\nexport const Line = styled.span`\n  width: 380px;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.4369285106658936px 2.5776965618133545px 0px #fbf8ff inset,\n    0px 3.4369285106658936px 3.4369285106658936px 0px rgba(0, 0, 0, 0.06),\n    0px -1.7184642553329468px 3.4369285106658936px 0px #ae7be3 inset;\n  /* position: relative; */\n  position: absolute;\n`;\n\nexport const AvatarWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  border-radius: 100px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.4369285106658936px 2.5776965618133545px 0px #fbf8ff inset,\n    0px 3.4369285106658936px 3.4369285106658936px 0px rgba(0, 0, 0, 0.06),\n    0px -1.7184642553329468px 3.4369285106658936px 0px #ae7be3 inset;\n`;\nexport const Image = styled.img`\n  width: 308px;\n  height: 168px;\n  margin-bottom: 88px;\n`;\nexport const ImageWrapper = styled.div`\n  position: relative;\n`;\nexport const Logo = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n","import Button from 'components/Button/Button';\nimport decor from '../../img/card_picture_1x.png';\nimport logo from '../../img/Logo.png';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Avatar,\n  AvatarWrapper,\n  CardText,\n  Image,\n  ImageWrapper,\n  Line,\n  Logo,\n  StyledCard,\n} from './Card.styled';\nconst Card = ({ user }) => {\n  const [updatedUser, setUpdatedUser] = useState(\n    JSON.parse(localStorage.getItem(String(user.id)))\n  );\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [userFollowers, setUserFollowers] = useState(user.followers);\n\n  useEffect(() => {\n    localStorage.setItem(\n      String(user.id),\n      JSON.stringify({ ...user, followers: userFollowers, isFollowing })\n    );\n  }, [user, userFollowers, isFollowing]);\n\n  useEffect(() => {\n    if (updatedUser) {\n      setIsFollowing(updatedUser.isFollowing);\n      setUserFollowers(updatedUser.followers);\n    }\n  }, [updatedUser]);\n\n  const handleClick = () => {\n    setTimeout(() => {\n      setIsFollowing(prev => !prev);\n    }, 0);\n\n    setTimeout(() => {\n      setUserFollowers(prevFollowers =>\n        isFollowing ? prevFollowers - 1 : prevFollowers + 1\n      );\n    }, 0);\n    setUpdatedUser(JSON.parse(localStorage.getItem(String(user.id))));\n  };\n  return (\n    <StyledCard>\n      <ImageWrapper>\n        <Image src={decor} alt=\"decoration\" />\n        <Logo src={logo} alt=\"GoIT logo\" />\n      </ImageWrapper>\n      <Line />\n      <AvatarWrapper>\n        <Avatar src={user.avatar} alt=\"avatar\" />\n      </AvatarWrapper>\n\n      <div>\n        <CardText>\n          {user.tweets.toLocaleString()}\n          tweets\n        </CardText>\n        <CardText>\n          {userFollowers.toLocaleString()}\n          followers\n        </CardText>\n\n        <Button\n          func={handleClick}\n          text={isFollowing ? 'following' : 'follow'}\n          background={isFollowing ? '#5CD3A8' : '#EBD8FF'}\n        />\n      </div>\n    </StyledCard>\n  );\n};\n\nexport default Card;\n","import { styled } from 'styled-components';\nexport const StyledCardsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 48px;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n`;\n","import Card from 'components/Card/Card';\nimport React from 'react';\n\nimport { StyledCardsList } from './CardList.styled';\n\nconst CardsList = ({ arr }) => {\n  return (\n    <StyledCardsList>\n      {arr.map(el => (\n        <Card user={el} key={el.id} />\n      ))}\n    </StyledCardsList>\n  );\n};\n\nexport default CardsList;\n","import React from 'react';\n\nconst Filter = ({ func }) => {\n  // const dispatch = useDispatch();\n  return (\n    <select name=\"filter\" defaultValue=\"all\" onChange={func}>\n      <option value=\"all\">All</option>\n      <option value=\"follow\">Follow</option>\n\n      <option value=\"followings\">Followings</option>\n    </select>\n  );\n};\n\nexport default Filter;\n","import { styled } from 'styled-components';\n\nexport const TweetsPageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 0 24px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectLoading,\n  selectPage,\n  selectUsers,\n} from 'services/redux/selectors';\nimport { fetchUsersPageThunk } from 'services/redux/operations';\nimport { useEffect } from 'react';\n\nimport CardsList from 'components/CadsList/CardsList';\nimport Button from 'components/Button/Button';\nimport Filter from 'components/Filter/Filter';\nimport { nextPage } from 'services/redux/slice';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { TweetsPageWrapper } from './Tweets.syled';\n\nexport const TweetsPage = () => {\n  const users = useSelector(selectUsers);\n  const isLoading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n  const page = useSelector(selectPage);\n  const navigate = useNavigate();\n\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  useEffect(() => {\n    if (users.length >= 3) {\n      return;\n    }\n\n    dispatch(fetchUsersPageThunk(1));\n  }, [dispatch, users.length]);\n\n  const savedUsers = Object.values(localStorage)\n    .filter(value => value !== 'INFO')\n    .map(obj => JSON.parse(obj));\n\n  const usersToFollow = savedUsers.filter(user => user.isFollowing === false);\n\n  const followingUsers = savedUsers.filter(user => user.isFollowing === true);\n\n  // const followingUsers = savedIds;\n\n  const handleClick = () => {\n    dispatch(nextPage(1));\n\n    dispatch(fetchUsersPageThunk(page + 1));\n\n    console.log(savedUsers);\n  };\n\n  const handleChange = ({ target }) => {\n    if (target.value === 'all') {\n      setFilteredUsers([]);\n    }\n    if (target.value === 'follow') {\n      setTimeout(() => {\n        setFilteredUsers([...usersToFollow]);\n        console.log(usersToFollow);\n      }, 0);\n    }\n    if (target.value === 'followings') {\n      setTimeout(() => {\n        setFilteredUsers([...followingUsers]);\n        console.log(followingUsers);\n      }, 0);\n    }\n  };\n  return (\n    <>\n      <Button\n        type=\"button\"\n        backgroung=\"#FFF\"\n        func={() => navigate(-1)}\n        text=\"back\"\n      />\n      <Filter func={handleChange} />\n\n      <TweetsPageWrapper>\n        <CardsList arr={filteredUsers.length ? filteredUsers : users} />;\n        {isLoading ? (\n          <h1>loading</h1>\n        ) : (\n          <Button\n            type=\"button\"\n            func={() => handleClick()}\n            text={'Load more'}\n            background=\"radial-gradient(\n    circle,\n    rgb(50, 78, 201) 0%,\n    rgb(219, 226, 121) 100%\n  )\"\n          />\n        )}\n      </TweetsPageWrapper>\n    </>\n  );\n};\nexport default TweetsPage;\n"],"names":["selectUsers","state","users","selectLoading","loading","selectPage","page","StyledButton","styled","_templateObject","_taggedTemplateLiteral","props","background","_ref","func","text","_jsx","type","onClick","children","StyledCard","CardText","_templateObject2","Avatar","_templateObject3","Line","_templateObject4","AvatarWrapper","_templateObject5","Image","_templateObject6","ImageWrapper","_templateObject7","Logo","_templateObject8","user","_useState","useState","JSON","parse","localStorage","getItem","String","id","_useState2","_slicedToArray","updatedUser","setUpdatedUser","_useState3","_useState4","isFollowing","setIsFollowing","_useState5","followers","_useState6","userFollowers","setUserFollowers","useEffect","setItem","stringify","_objectSpread","_jsxs","src","decor","alt","avatar","tweets","toLocaleString","Button","setTimeout","prev","prevFollowers","StyledCardsList","arr","map","el","Card","name","defaultValue","onChange","value","TweetsPageWrapper","TweetsPage","useSelector","isLoading","dispatch","useDispatch","navigate","useNavigate","filteredUsers","setFilteredUsers","length","fetchUsersPageThunk","savedUsers","Object","values","filter","obj","usersToFollow","followingUsers","_Fragment","backgroung","Filter","target","_toConsumableArray","console","log","CardsList","nextPage"],"sourceRoot":""}